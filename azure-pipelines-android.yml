# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: 'macOS-10.14'

variables:
  - group: AndroidKeystore

steps:
- task: Gradle@2
  inputs:
    workingDirectory: 'src/android'
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    publishJUnitResults: false
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug'

- task: AndroidSigning@2
  inputs:
    apkFiles: '**/*.apk'
    jarsign: true
    jarsignerKeystoreFile: 'android.keystore'
    jarsignerKeystorePassword: '$(jarsignerKeystorePassword)'
    jarsignerKeystoreAlias: 'react-native-pipeline-key'
    jarsignerKeyPassword: '$(jarsignerKeyPassword)'
    zipalign: true

- task: CopyFiles@2
  inputs:
    SourceFolder: $(Build.SourcesDirectory)
    contents: '**/*.release.apk' 
    targetFolder: '$(build.artifactStagingDirectory)'
    overWrite: true

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/app/build/outputs/apk/release/'
    artifactName: 'apks' 
    publishLocation: 'container'